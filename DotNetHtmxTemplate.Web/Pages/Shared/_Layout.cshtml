<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>My App</title>
        <link rel="stylesheet" href="~/css/site.css" />
        <script src="~/js/htmx.min.js"></script>
        <script>
            htmx.on('htmx:afterRequest', function (evt) {
                if (evt.detail.xhr.status === 401 || evt.detail.xhr.status === 302 || evt.detail.xhr.redirected) {
                    const redirectUrl = evt.detail.xhr.getResponseHeader('HX-Redirect') ||
                        evt.detail.xhr.responseURL ||
                        '/authentication';
                    window.location.href = redirectUrl;
                    evt.preventDefault();
                    return;
                }
                if (evt.detail.xhr.status >= 400) {
                    console.error('Request failed:', evt.detail.xhr);
                    evt.preventDefault();
                    return;
                }
            });
            htmx.on('htmx:beforeRequest', function (evt) {
                evt.detail.target.classList.add('htmx-requesting');
            });

            htmx.on('htmx:afterRequest', function (evt) {
                evt.detail.target.classList.remove('htmx-requesting');
            });
            htmx.defineExtension('submitjson', {
                onEvent: function (name, evt) {
                    if (name === "htmx:configRequest") {
                        evt.detail.headers['Content-Type'] = "application/json";
                    }
                },
                encodeParameters: function (xhr, parameters, elt) {
                    xhr.overrideMimeType('application/json'); // override default mime type
                    return (JSON.stringify(parameters));
                }
            })
            htmx.defineExtension('submitjson-list', {
                onEvent: function (name, evt) {
                    if (name === "htmx:configRequest") {
                        evt.detail.headers['Content-Type'] = "application/json";
                    }
                },
                encodeParameters: function (xhr, parameters, elt) {
                    xhr.overrideMimeType('application/json'); // override default mime type
                    console.log([parameters]);
                    return "[" + JSON.stringify(parameters) + "]";
                }
            })
        </script>
    </head>
    <body>
        <div class="flex h-full min-h-screen">
            <!-- Sidebar -->
            @await Html.PartialAsync("_Navigation")
            <!-- Main Content -->
            @RenderBody()
        </div>
    </body>
</html>